{
  "stats": {
    "suites": 14,
    "tests": 11,
    "passes": 11,
    "pending": 0,
    "failures": 0,
    "start": "2021-03-21T17:59:32.806Z",
    "end": "2021-03-21T17:59:33.370Z",
    "duration": 564,
    "testsRegistered": 13,
    "passPercent": 84.61538461538461,
    "pendingPercent": 0,
    "other": 1,
    "hasOther": true,
    "skipped": 2,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "150a42ab-d89e-4416-ad3d-7bbdf25f4b1f",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0466f3a7-bd9d-4fff-828f-a2c64f161313",
          "title": "delete",
          "fullFile": "C:\\Users\\andre\\OneDrive\\Desktop\\qaninja\\treko\\api\\test\\delete.spec.js",
          "file": "\\test\\delete.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "58426042-a1cb-452d-9ae9-9fdbe95f25a2",
              "title": "quando apago uma tarefa",
              "fullFile": "C:\\Users\\andre\\OneDrive\\Desktop\\qaninja\\treko\\api\\test\\delete.spec.js",
              "file": "\\test\\delete.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"quando apago uma tarefa\"",
                  "fullTitle": "delete quando apago uma tarefa \"before all\" hook in \"quando apago uma tarefa\"",
                  "timedOut": false,
                  "duration": 1,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_task2.default.insertMany([task]);\ndone();",
                  "err": {},
                  "uuid": "19964150-4af2-48f5-b6de-e43b8e322b31",
                  "parentUUID": "58426042-a1cb-452d-9ae9-9fdbe95f25a2",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook in \"quando apago uma tarefa\"",
                  "fullTitle": "delete quando apago uma tarefa \"after all\" hook in \"quando apago uma tarefa\"",
                  "timedOut": false,
                  "duration": 23,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.get('/task/' + task._id).end(function (err, res) {\n    expect(res).to.have.status(404);\n    done();\n});",
                  "err": {},
                  "uuid": "a4cb2aec-9729-46e1-af83-12a4c3a25b5a",
                  "parentUUID": "58426042-a1cb-452d-9ae9-9fdbe95f25a2",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "deve retornar 200",
                  "fullTitle": "delete quando apago uma tarefa deve retornar 200",
                  "timedOut": false,
                  "duration": 74,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.delete('/task/' + task._id).end(function (err, res) {\n    // expect(res).to.have.status(200);\n    // expect(res.body).to.eql({});\n    done();\n});",
                  "err": {},
                  "uuid": "4f707ce5-51cf-4520-b534-6b7dd4b7c1f9",
                  "parentUUID": "58426042-a1cb-452d-9ae9-9fdbe95f25a2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4f707ce5-51cf-4520-b534-6b7dd4b7c1f9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 74,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "46300a93-5853-45af-8d68-d6c381429256",
              "title": "quando a tarefa não existe",
              "fullFile": "C:\\Users\\andre\\OneDrive\\Desktop\\qaninja\\treko\\api\\test\\delete.spec.js",
              "file": "\\test\\delete.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "deve retornar 404",
                  "fullTitle": "delete quando a tarefa não existe deve retornar 404",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var id = require('mongoose').Types.ObjectId();\nrequest.delete('/task/' + id).end(function (err, res) {\n    expect(res).to.have.status(404);\n    done();\n});",
                  "err": {},
                  "uuid": "ff0b9c8f-87a1-4bd8-a55c-d92e62468844",
                  "parentUUID": "46300a93-5853-45af-8d68-d6c381429256",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ff0b9c8f-87a1-4bd8-a55c-d92e62468844"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 11,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b1d2aa4e-3662-4dde-bf12-b3e17a72f0ab",
          "title": "get",
          "fullFile": "C:\\Users\\andre\\OneDrive\\Desktop\\qaninja\\treko\\api\\test\\get.spec.js",
          "file": "\\test\\get.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "6a18a6ca-3f36-47cd-858d-6806761bf628",
              "title": "quando eu tenho tarefas cadastradas",
              "fullFile": "C:\\Users\\andre\\OneDrive\\Desktop\\qaninja\\treko\\api\\test\\get.spec.js",
              "file": "\\test\\get.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"quando eu tenho tarefas cadastradas\"",
                  "fullTitle": "get quando eu tenho tarefas cadastradas \"before all\" hook in \"quando eu tenho tarefas cadastradas\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var tasks = [{ title: 'Estudar Nodejs', owner: 'eu@andrey.com', done: false }, { title: 'Contratos', owner: 'eu@andrey2.com', done: false }, { title: 'Estudar MongoDB', owner: 'eu@andrey2.com', done: false }];\n_task2.default.insertMany(tasks);\ndone();",
                  "err": {},
                  "uuid": "16152fb7-8ff6-474c-a4bd-b1fa405857cf",
                  "parentUUID": "6a18a6ca-3f36-47cd-858d-6806761bf628",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve retornar uma lista",
                  "fullTitle": "get quando eu tenho tarefas cadastradas Deve retornar uma lista",
                  "timedOut": false,
                  "duration": 21,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.get('/task').end(function (err, res) {\n    expect(res).to.has.status(200);\n    expect(res.body.data).to.be.an('array');\n    done();\n});",
                  "err": {},
                  "uuid": "8074b850-3983-440b-84b9-199dc9f1b770",
                  "parentUUID": "6a18a6ca-3f36-47cd-858d-6806761bf628",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve filtrar por palavra chave",
                  "fullTitle": "get quando eu tenho tarefas cadastradas Deve filtrar por palavra chave",
                  "timedOut": false,
                  "duration": 15,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.get('/task').query({ title: 'Estudar' }).end(function (err, res) {\n    expect(res).to.has.status(200);\n    // expect(res.body.data[0].title).to.equal('Estudar MongoDB')\n    done();\n});",
                  "err": {},
                  "uuid": "6662a8f8-0fd0-49cd-9c42-6c3d6f3d6ff2",
                  "parentUUID": "6a18a6ca-3f36-47cd-858d-6806761bf628",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8074b850-3983-440b-84b9-199dc9f1b770",
                "6662a8f8-0fd0-49cd-9c42-6c3d6f3d6ff2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 36,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "0da35871-629f-4294-84b7-72ad0694c7cb",
              "title": "quando busco por id",
              "fullFile": "C:\\Users\\andre\\OneDrive\\Desktop\\qaninja\\treko\\api\\test\\get.spec.js",
              "file": "\\test\\get.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "deve retornar uma única tarefa",
                  "fullTitle": "get quando busco por id deve retornar uma única tarefa",
                  "timedOut": false,
                  "duration": 20,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var tasks = [{ title: 'Ler um livro de JavaScript', owner: 'eu@andrey.com', done: false }];\n_task2.default.insertMany(tasks, function (err, result) {\n    var id = result[0]._id;\n    request.get('/task/' + id).end(function (err, res) {\n        expect(res).to.has.status(200);\n        expect(res.body.data.title).to.equal('Ler um livro de JavaScript');\n        expect(res.body.data.title).to.equal(tasks[0].title);\n        done();\n    });\n});",
                  "err": {},
                  "uuid": "d9a9b655-0696-479a-a738-87885b816ec4",
                  "parentUUID": "0da35871-629f-4294-84b7-72ad0694c7cb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d9a9b655-0696-479a-a738-87885b816ec4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 20,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "759cd802-9c73-4fa5-9408-249c1eb47911",
              "title": "quandoa tarefa não existe",
              "fullFile": "C:\\Users\\andre\\OneDrive\\Desktop\\qaninja\\treko\\api\\test\\get.spec.js",
              "file": "\\test\\get.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "deve retornar 404",
                  "fullTitle": "get quandoa tarefa não existe deve retornar 404",
                  "timedOut": false,
                  "duration": 18,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var id = require('mongoose').Types.ObjectId();\nrequest.get('/task/' + id).end(function (err, res) {\n    expect(res).to.has.status(404);\n    expect(res.body).to.eql({});\n    done();\n});",
                  "err": {},
                  "uuid": "c1bf53d3-6677-4daa-995f-5f12edfc986b",
                  "parentUUID": "759cd802-9c73-4fa5-9408-249c1eb47911",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c1bf53d3-6677-4daa-995f-5f12edfc986b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 18,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f7adb4d5-d808-4271-b738-6459156fb8e8",
          "title": "post",
          "fullFile": "C:\\Users\\andre\\OneDrive\\Desktop\\qaninja\\treko\\api\\test\\post.spec.js",
          "file": "\\test\\post.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "7044689a-ea59-4980-9a2f-1b94b7f741eb",
              "title": "Quando eu cadastro uma tarefa",
              "fullFile": "C:\\Users\\andre\\OneDrive\\Desktop\\qaninja\\treko\\api\\test\\post.spec.js",
              "file": "\\test\\post.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook for \"entao deve retornar 200\"",
                  "fullTitle": "post Quando eu cadastro uma tarefa \"before all\" hook for \"entao deve retornar 200\"",
                  "timedOut": false,
                  "duration": 34,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "rabbit.delete('/api/queues%2F/task/dev/contents').auth('guest', 'guest').end(function (err, res) {\n    expect(res).to.has.status(204);\n    done();\n});",
                  "err": {
                    "message": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 204 but got 405",
                    "estack": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 204 but got 405\n    at C:/Users/andre/OneDrive/Desktop/qaninja/treko/api/test/post.spec.js:23:36\n    at Test.Request.callback (node_modules\\superagent\\lib\\node\\index.js:716:12)\n    at IncomingMessage.<anonymous> (node_modules\\superagent\\lib\\node\\index.js:916:18)\n    at endReadableNT (_stream_readable.js:1327:12)\n    at processTicksAndRejections (internal/process/task_queues.js:80:21)",
                    "diff": "- 405\n+ 204\n"
                  },
                  "uuid": "3e79aac2-07c5-47a3-aa1d-10bda3504833",
                  "parentUUID": "7044689a-ea59-4980-9a2f-1b94b7f741eb",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "entao deve retornar 200",
                  "fullTitle": "post Quando eu cadastro uma tarefa entao deve retornar 200",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/task').send(task).end(function (err, res) {\n    expect(res).to.has.status(200);\n    expect(res.body.data.title).to.be.an('string');\n    expect(res.body.data.owner).to.be.an('string');\n    expect(res.body.data.done).to.be.an('boolean');\n    done();\n});",
                  "err": {},
                  "uuid": "17b962fa-4631-40ed-af5a-7d3ce230f114",
                  "parentUUID": "7044689a-ea59-4980-9a2f-1b94b7f741eb",
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "e deve enviar um email",
                  "fullTitle": "post Quando eu cadastro uma tarefa e deve enviar um email",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var payload = {\n    vhost: \"/\",\n    name: \"tasks\",\n    truncate: \"50000\",\n    ackmode: \"ack_requeue_true\",\n    encoding: \"auto\",\n    count: \"1\"\n};\nrabbit.post('/api/queues/%2F/tasksdev/get').auth('guest', 'guest').send(payload).end(function (res, err) {\n    expect(res).to.has.status(200);\n    expect(res.bod[0].payload).to.contain('Tarefa ' + task.title + ' criada com sucesso!');\n    done();\n});\ndone();",
                  "err": {},
                  "uuid": "2eb143dc-822f-4953-9d44-6c5d88f7c54c",
                  "parentUUID": "7044689a-ea59-4980-9a2f-1b94b7f741eb",
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "17b962fa-4631-40ed-af5a-7d3ce230f114",
                "2eb143dc-822f-4953-9d44-6c5d88f7c54c"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "0d5e7bb7-329f-4952-a601-ba57c3a029c7",
              "title": "Quando nao informo o titulo",
              "fullFile": "C:\\Users\\andre\\OneDrive\\Desktop\\qaninja\\treko\\api\\test\\post.spec.js",
              "file": "\\test\\post.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "entao deve retornar 400",
                  "fullTitle": "post Quando nao informo o titulo entao deve retornar 400",
                  "timedOut": false,
                  "duration": 37,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/task').send(task).end(function (err, res) {\n    expect(res).to.be.has.status(400);\n    expect(res.body.errors.owner.message).to.equal('Ooops! Owner is required.');\n    done();\n});",
                  "err": {},
                  "uuid": "6d084bfb-bb9c-4a11-a90b-a1c0361ab9a4",
                  "parentUUID": "0d5e7bb7-329f-4952-a601-ba57c3a029c7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6d084bfb-bb9c-4a11-a90b-a1c0361ab9a4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 37,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "37d347ce-679a-4c25-a958-a8a498dbcd95",
              "title": "Quando nao informo o dono",
              "fullFile": "C:\\Users\\andre\\OneDrive\\Desktop\\qaninja\\treko\\api\\test\\post.spec.js",
              "file": "\\test\\post.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "entao deve retornar 400",
                  "fullTitle": "post Quando nao informo o dono entao deve retornar 400",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/task').send(task).end(function (err, res) {\n    expect(res).to.be.has.status(400);\n    expect(res.body.errors.title.message).to.equal('Ooops! Title is required.');\n    done();\n});",
                  "err": {},
                  "uuid": "8aedbd04-3f97-4508-a9af-c5b9235e2e6f",
                  "parentUUID": "37d347ce-679a-4c25-a958-a8a498dbcd95",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8aedbd04-3f97-4508-a9af-c5b9235e2e6f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "6686b1ea-eaa4-4923-a158-16b7fe6e89df",
              "title": "Quando a tarefa já existe",
              "fullFile": "C:\\Users\\andre\\OneDrive\\Desktop\\qaninja\\treko\\api\\test\\post.spec.js",
              "file": "\\test\\post.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Quando a tarefa já existe\"",
                  "fullTitle": "post Quando a tarefa já existe \"before all\" hook in \"Quando a tarefa já existe\"",
                  "timedOut": false,
                  "duration": 31,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/task').send(task).end(function (err, res) {\n    expect(res).to.has.status(200);\n    done();\n});",
                  "err": {},
                  "uuid": "a7d47dd2-1d86-401c-80cf-a0e81a835013",
                  "parentUUID": "6686b1ea-eaa4-4923-a158-16b7fe6e89df",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "deve retornar 409",
                  "fullTitle": "post Quando a tarefa já existe deve retornar 409",
                  "timedOut": false,
                  "duration": 23,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/task').send(task).end(function (err, res) {\n    expect(res).to.has.status(409);\n    // console.log(res.body)\n    // expect(res.body.errmsg).to.include('duplicate key')\n    done();\n});",
                  "err": {},
                  "uuid": "c337e186-502d-4cad-ac58-cd9d8a965562",
                  "parentUUID": "6686b1ea-eaa4-4923-a158-16b7fe6e89df",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c337e186-502d-4cad-ac58-cd9d8a965562"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 23,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7cc37298-a346-42da-9757-9b37ac0a9da0",
          "title": "put",
          "fullFile": "C:\\Users\\andre\\OneDrive\\Desktop\\qaninja\\treko\\api\\test\\put.spec.js",
          "file": "\\test\\put.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "9e7a858c-b266-4898-a139-6fde3dcbe4ce",
              "title": "quando eu altero uma tarefa",
              "fullFile": "C:\\Users\\andre\\OneDrive\\Desktop\\qaninja\\treko\\api\\test\\put.spec.js",
              "file": "\\test\\put.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"quando eu altero uma tarefa\"",
                  "fullTitle": "put quando eu altero uma tarefa \"before all\" hook in \"quando eu altero uma tarefa\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_task2.default.insertMany([task]);\ndone();",
                  "err": {},
                  "uuid": "7bcdda4b-98d8-45da-90cb-20d2d784e93c",
                  "parentUUID": "9e7a858c-b266-4898-a139-6fde3dcbe4ce",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "entao deve retornar 200",
                  "fullTitle": "put quando eu altero uma tarefa entao deve retornar 200",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "task.title = 'Comprar Baconzitos', task.done = true;\nrequest.put('/task/' + task._id).send(task).end(function (err, res) {\n    expect(res).to.have.status(200);\n    expect(res.body).to.eql({});\n});\ndone();",
                  "err": {},
                  "uuid": "39afa66e-ff68-4dc9-9f54-3491adebae91",
                  "parentUUID": "9e7a858c-b266-4898-a139-6fde3dcbe4ce",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "e deve atualizar os dados",
                  "fullTitle": "put quando eu altero uma tarefa e deve atualizar os dados",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.get('/task/' + task._id).end(function (err, res) {\n    expect(res).to.have.status(200);\n    expect(res.body.data.title).to.eql('Comprar Baconzitos');\n    expect(res.body.data.done).to.be.true;\n});\ndone();",
                  "err": {},
                  "uuid": "918404d9-4f60-4246-b360-a7839e782a62",
                  "parentUUID": "9e7a858c-b266-4898-a139-6fde3dcbe4ce",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "39afa66e-ff68-4dc9-9f54-3491adebae91",
                "918404d9-4f60-4246-b360-a7839e782a62"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.3.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": null,
      "version": "5.2.0"
    }
  }
}